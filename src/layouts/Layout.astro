---
// Supports weights 100-900
import Noise from '@/components/Noise.astro';
import SmokeBackground from '@/components/SmokeBackground.astro';
import Theme from '@/components/Theme.astro';
import '@fontsource-variable/jost';

interface Props {
	title: string;
}

const { title } = Astro.props;
---

<!doctype html>
<html lang="es">
	<head>
		<meta charset="UTF-8" />
		<meta name="description" content="Evento de boxeo entre streamers y creadores de contenido, organizado por Ibai Llanos" />
		<meta name="viewport" content="width=device-width, initial-scale=1.0">
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<link rel="canonical" href="https://lavelada.es">
		<!-- 'canonical' -> página web original a la que tiene que ir -->
		<title>{title}</title>

		<meta name="twitter:card" content="summary_large_image">
		<meta name="twitter:title" content="Pre-Landing La Velada V">
		<meta name="twitter:description" content="Evento de boxeo entre streamers y creadores de contenido, organizado por Ibai Llanos">
		<meta name="twitter:image" content="./README.png">

		<meta property="og:site_name" content="La Velada V - Evento de boxeo de Ibai Llanos">
		<meta property="og:type" content="website">
		<meta property="og:url" content="https://cv-drespns.vercel.app">
		<meta property="og:title" content="Pre-Landing La Velada V">
		<meta property="og:description" content="Evento de boxeo entre streamers y creadores de contenido, organizado por Ibai Llanos">
		<meta property="og:image" content="/README.png">

		<script is:inline>
			
			const getThemePreference = () => {
				const localItem = typeof localStorage !== "undefined" && localStorage.getItem("theme");
				if (localItem) return localItem

				// return window.matchMedia(query: string)
				return window.matchMedia("(prefers-color-scheme: dark)").matches
					? "dark"
					: "light"
				/**
				 * window.matchMedia("(prefers-color-scheme: dark)")
						MediaQueryList {media: '(prefers-color-scheme: dark)', matches: true, onchange: null}
							matches: true
							media: "(prefers-color-scheme: dark)"
							onchange: null
							[[Prototype]]: MediaQueryList
				*/
			}
			const isDark = getThemePreference() === "dark";
			// document.documentElement.classList[isDark ? "add" : "remove"]("dark");
			// NOTE: ¡Es mala práctica hacer esto! Aunque está interesante ver que JS permite hacer este tipo de condicionales en las key
			// de los objetos. Con el 'toggle' se puede hacer parecido:
			// document.documentElement.classList.toggle("dark", isDark);
			//toggle(token: string, force?: boolean): boolean

			// Tampoco es buena práctica añadir el objeto global:
			window.getThemePreference = getThemePreference // src/env.d.ts
		</script>
	</head>
	<body class="text-primary dark:text-white">

		<!-- <div class="container relative -z-10 mx-auto w-screen overflow-x-clip">
			<img
				aria-hidden="true"
				class="absolute top-0 w-screen transform-gpu opacity-0 brightness-0 dark:brightness-200 md:scale-125 lg:left-0 lg:scale-100"
				src="/lights.svg"
				onload="this.classList.add('animate-fade-in', 'animate-duration-500')"
				alt="Focos de luz"
			>
		</div> -->
		<!-- <Noise /> -->
		<Theme />
		<SmokeBackground /> <!-- bg-secondary dark:bg-primary -->
		<div class="max-w-6xl px-10 pt-32 mx-auto"> <!-- 1152 - 40*2 ~ 1072px (imagen Figma oficial) -->
			<slot />
		</div>
	</body>
</html>
<style is:global>
	:root {
		--accent: rgb(136, 58, 234);
		--accent-light: rgb(224, 204, 250);
		--accent-dark: rgb(49, 10, 101);
		--accent-gradient: linear-gradient(
			45deg,
			var(--accent),
			var(--accent-light) 30%,
			white 60%
		);
	}
	html {
		font-family: "Jost Variable", system-ui, sans-serif;
		background: #ddd;
	}
</style>
